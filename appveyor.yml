image:
- Visual Studio 2017
- Ubuntu

configuration: Debug	
#platform: Any CPU

environment:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  github_oauth_token:
    secure: H1vW5fnfAOt5/c5f1qnaatUjFVAPc2oZnxDBFutJZL58LxAyJNRLtfIBrcHnSg8y
  
dotnet_csproj:
  patch: true
  file: '**\*.csproj'
  version: '%GitVersion_NuGetVersion%'
  package_version: '%GitVersion_NuGetVersion%'
  #version: '{version}'
  #package_version: '{version}'
  # assembly_version: '{version}'
  # file_version: '{version}'
  informational_version: '%GitVersion_InformationalVersion%'

install:
# Install and run gitversion.
- cmd: choco install gitversion.portable -pre -y
- cmd: C:\ProgramData\chocolatey\lib\gitversion.portable\tools\gitversion.exe /l console /output buildserver
- sh: chmod +x .scripts/InstallGitVersion.sh && .scripts/InstallGitVersion.sh
- sh: mono .scripts/GitVersion/GitVersion.exe /l console /output buildserver

# install opencover (windows)
- cmd: choco install opencover.portable -y

# install (latest) codecov (choco is behind of nuget) and coveralls in linux.
- cmd: nuget install Codecov -Version 1.0.3 -OutputDirectory C:\NuGetTools\
- sh: npm install --save-dev coveralls

# Install Exiftool	
- cmd: powershell .\.scripts\InstallExiftool.ps1
- sh: chmod +x .scripts/InstallExiftool.sh && .scripts/InstallExiftool.sh

# git update submodules.
- git submodule update --init --recursive

before_build:
- dotnet restore

build:
  verbosity: minimal
  
test_script:
- cmd: powershell .\.scripts\TestCoverage.ps1
- sh: chmod +x .scripts/TestCoverage.sh && .scripts/TestCoverage.sh

after_test:
- cmd: powershell .scripts\Codecov.ps1
